{\rtf1\ansi\ansicpg1252\cocoartf2818
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
\f3\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red71\green91\blue98;\red252\green244\blue220;\red83\green104\blue112;
\red33\green118\blue199;\red115\green138\blue4;\red129\green144\blue144;\red37\green146\blue134;\red189\green54\blue19;
\red26\green26\blue26;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c34510\c43137\c45882;\cssrgb\c99216\c96471\c89020;\cssrgb\c39608\c48235\c51373;
\cssrgb\c14902\c54510\c82353;\cssrgb\c52157\c60000\c0;\cssrgb\c57647\c63137\c63137;\cssrgb\c16471\c63137\c59608;\cssrgb\c79608\c29412\c8627;
\cssrgb\c13333\c13333\c13333;\cssrgb\c100000\c100000\c100000;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 def
\f1\b0 \cf4 \strokec4  \cf5 \strokec5 euclid_distance_numpy\cf4 \strokec4 (personA,personB):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     personA \cf6 \strokec6 =\cf4 \strokec4  np.array(personA)\cb1 \
\cb3     personB \cf6 \strokec6 =\cf4 \strokec4  np.array(personB)\cb1 \
\cb3     distance \cf6 \strokec6 =\cf4 \strokec4  np.linalg.norm(personA \cf6 \strokec6 -\cf4 \strokec4  personB)\cb1 \
\cb3     \cf6 \strokec6 return\cf4 \strokec4  distance\cb1 \
\
\cb3 euc_dist_np \cf6 \strokec6 =\cf4 \strokec4  euclid_distance_numpy(person1,person2)\cb1 \
\pard\pardeftab720\partightenfactor0

\f2\i \cf7 \cb3 \strokec7 #print(euc_dist_np)
\f1\i0 \cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0

\f0\b \cf2 \cb3 \strokec2 def
\f1\b0 \cf4 \strokec4  \cf5 \strokec5 euclid_distance_numpy\cf4 \strokec4 (personA,personB):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     personA \cf6 \strokec6 =\cf4 \strokec4  np.array(personA)\cb1 \
\cb3     personB \cf6 \strokec6 =\cf4 \strokec4  np.array(personB)\cb1 \
\cb3     distance \cf6 \strokec6 =\cf4 \strokec4  np.linalg.norm(personA \cf6 \strokec6 -\cf4 \strokec4  personB)\cb1 \
\cb3     \cf6 \strokec6 return\cf4 \strokec4  distance\cb1 \
\
\cb3 euc_dist_np \cf6 \strokec6 =\cf4 \strokec4  euclid_distance_numpy(person1,person3)\cb1 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 print\cf4 \strokec4 (
\f0\b \cf2 \strokec2 f
\f1\b0 \cf8 \cb3 \strokec8 'euc distance by numpy is: \cf9 \strokec9 \{\cf4 \cb3 \strokec4 euc_dist_np\cf9 \cb3 \strokec9 \}\cf8 \strokec8 '\cf4 \cb3 \strokec4 )\cb1 \
\
\
\pard\pardeftab720\partightenfactor0

\f3\fs20 \cf10 \cb11 \strokec10 mport math\
import np\
from sklearn.cluster import KMeans\
from sklearn.decomposition import PCA\
import matplotlib.pyplot as plt\
\
np.random.seed(42)\
\
# Parameters for the dataset\
num_people = 100 \'a0# Number of people you want to generate\
num_features = 6 \'a0# Number of features per person\
feature_min = 1 \'a0 # Minimum value for each feature\
feature_max = 10 \'a0# Maximum value for each feature\
\
# Generate random people data\
random_people = np.random.randint(feature_min, feature_max + 1, size=(num_people, num_features))\
# random_people\
\
# Perform k-means clustering\
num_clusters = 2 \'a0# Number of clusters\
kmeans = KMeans(n_clusters=num_clusters, random_state=0)\
label = kmeans.fit_predict(random_people)\
\
# Reduce data to 2D for visualization using PCA\
pca = PCA(n_components=2)\
data_2d = pca.fit_transform(random_people)\
\
u_labels = np.unique(label)\
\
#plotting the results:\
\'a0\
for i in u_labels:\
\'a0 \'a0 plt.scatter(data_2d[label == i , 0] , data_2d[label == i , 1] , label = i)\
plt.legend()\
plt.show()}