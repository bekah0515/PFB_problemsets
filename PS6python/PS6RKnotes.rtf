{\rtf1\ansi\ansicpg1252\cocoartf2818
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11540\viewh8420\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. Myset1 = set(\'91AT\'92) : creates each object in that string as individual (aka \'91A\'92 \'92T\'92)\
Myset2 = \{\'91AT\'92\}: treats that string of objects as one item (aka \'93AT\'94)\
\
Yes, it matters which method you use \
Myset 1 would include 2 items\
Myset 2 would include 1 item. \
\
2. \{'5', '15', '26', '35', '14', '9', '3'\}\
\{'60', '22', '14', '9', '0'\}\
Interesection: \{'9', '14'\}\
Difference: \{'5', '3', '26', '15', '35'\}\
Union: \{'5', '9', '3', '15', '26', '60', '22', '35', '14', '0'\}\
Symmetrical difference: \{'5', '3', '26', '60', '15', '22', '35', '0'\}\
\
3. If I make my dna seq into a  set, it spits out \'93\{'N', 'A', 'X', 'C', 'T', \'91G\'92\}\'94  \'97> the unique characters in that sequence. \
\
4. unique nt: \{'T', 'X', 'A', 'C', 'G', 'N'\}\
nt_count: \{'T': 368, 'X': 1, 'A': 327, 'C': 537, 'G': 430, 'N': 2\}\
\
unique nt: \{'C', 'T', 'N', 'G', 'X', 'A'\}\
nt_count: \{'C': 537, 'T': 368, 'N': 2, 'G': 430, 'X': 1, 'A': 327\}\
GC content is 58.08%\
\
5. Open and read Python_06 text: read with cat. Also used this: \
seq_file_obj = open("Python_06.txt","r")\
contents = seq_file_obj.read()\
print(contents)\
\
#!/usr/bin/env python3\
\
with open('Python_06.txt','r') as open_file:\
  for line in open_file:\
    line = line.rstrip()\
    line = line.capitalize()\
    print(line)\
~\
\
6. with open('Python_06.txt','r') as open_file, open('Python_06_uc.txt','w') as write_file:\
  for line in open_file:\
    line = line.upper()\
    write_file.write(line)\
  print('done!')\
\
7. \
}